const webpack = require('webpack');
const mode = require('yargs').argv.mode;
const libraryTarget = require('yargs').argv['output-library-target'];
const pkg = require('./package.json');
const { CleanWebpackPlugin } = require('clean-webpack-plugin');
//TODO: load on dev only
const HtmlWebpackPlugin = require('html-webpack-plugin');
const TerserPlugin = require('terser-webpack-plugin');

const libraryName = pkg.name;
const banner = `${pkg.name}
${pkg.description}\n
@version v${pkg.version}
@author ${pkg.author}
@homepage ${pkg.homepage}
@repository ${pkg.repository.url}`;

const plugins = [
  new webpack.BannerPlugin(banner),
  new HtmlWebpackPlugin(),
  new CleanWebpackPlugin(),
  new webpack.SourceMapDevToolPlugin({
    filename: '[name].js.map',
  })
];

module.exports = {
  entry: `${__dirname}/index.js`,
  devtool: false,
  output: {
    path: `${__dirname}/${libraryTarget === 'umd' ? 'dist' : 'lib'}`,
    filename: mode === 'development' ? `${libraryName}.js` : `${libraryName}.min.js`,
    library: libraryName,
    libraryTarget: libraryTarget || 'umd',
    globalObject: '(typeof self !== \'undefined\' ? self : this)', // TODO Hack (for Webpack 4+) to enable create UMD build which can be required by Node without throwing error for window being undefined (https://github.com/webpack/webpack/issues/6522)
    umdNamedDefine: true
  },
  module: {
    rules: [
      {
        test: /(\.jsx|\.js)$/,
        loader: 'babel-loader',
        exclude: /(node_modules|bower_components)/
      },
      // {
      //   test: /(\.jsx|\.js)$/,
      //   loader: 'eslint-loader',
      //   exclude: /(node_modules|bower_components)/,
      //   options: {
      //     fix:true
      //   },
      // },
    ]
  },
  resolve: {
    extensions: ['.tsx', '.ts', '.js'],
  },
  devtool: 'source-map',
  devServer: {
    contentBase: './dist',
  },
  // optimization:{
  //   minimize: true,
  //   minimizer: [
  //     new TerserPlugin({
  //       terserOptions: {
  //         sourceMap: true,
  //         keep_fnames: false,
  //         keep_classnames: true,
  //       },
  //     }),
  //   ],
  // },
  plugins: plugins
};
